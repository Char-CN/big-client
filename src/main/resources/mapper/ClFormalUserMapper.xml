<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blazer.bigclient.mapper.ClFormalUserMapper" >
  <resultMap id="BaseResultMap" type="org.blazer.bigclient.model.ClFormalUser" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone_number" property="phoneNumber" jdbcType="BIGINT" />
    <result column="report_or_allot" property="reportOrAllot" jdbcType="VARCHAR" />
    <result column="report_or_allot_date" property="reportOrAllotDate" jdbcType="VARCHAR" />
    <result column="user_identify" property="userIdentify" jdbcType="VARCHAR" />
    <result column="if_delete" property="ifDelete" jdbcType="INTEGER" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <!-- 自定义DTO对象 -->
  <resultMap id="DTOResultMap" type="org.blazer.bigclient.body.FormalUserBean">
    <id column="id" property="userId"/>
    <result column="phone_number" property="phoneNumber"/>
    <result column="report_or_allot" property="reportOrAllot"/>
    <result column="report_or_allot_date" property="reportOrAllotDate"/>
    <result column="user_identify" property="userIdentify"/>
    <result column="actual_name" property="investmentAdviser"/>
    <result column="if_delete" property="ifDelete"/>
    <result column="version_no" property="versionNo"/>
    <result column="start_date" property="startDate"/>
    <result column="end_date" property="endDate"/>
  </resultMap>


  <select id="selectMaxVersionList" resultMap="DTOResultMap">
    SELECT
      b.id,
      b.phone_number,
      b.report_or_allot,
      b.report_or_allot_date,
      b.user_identify,
      c.actual_name,
      b.if_delete,
      a.version_no,
      a.start_date,
      a.end_date
    FROM
    (SELECT a.user_id,a.version_no,a.advisor_id,a.start_date,a.end_date FROM cl_formal_user_version a
    JOIN (SELECT user_id,max(version_no) AS max_version_no FROM cl_formal_user_version GROUP BY user_id) b
    ON a.user_id = b.user_id
    AND a.version_no = b.max_version_no) a
    LEFT OUTER JOIN cl_formal_user b ON a.user_id = b.id
    LEFT OUTER JOIN kam_advisor c ON a.advisor_id = c.id
  </select>


</mapper>